object Versions {
    const val kotlin = "1.3.72"
    const val arrowCore = "0.8.0"
    const val androidxCore = "1.3.1"
    const val appCompat = "1.2.0"
    const val constraintLayout = "2.0.4"
    const val legacySupport = "1.0.0"
    const val testCore = "1.2.0"
    const val junit = "4.12"
    const val junitExt = "1.1.1"
    const val espresso = "3.2.0"
    const val material = "1.1.0"
    const val recyclerView = "1.0.0"
    const val navigationFragment = "2.1.0"
    const val navigationUI = "2.1.0"
    const val glide = "4.11.0"
    const val roomRuntime = "2.2.5"
    const val roomKtx = "2.2.5"
    const val roomCompiler = "2.2.5"
    const val koin = "2.0.1"
    const val koinViewModel = "2.0.1"
    const val koinScope = "2.0.1"
    const val rxAndroid = "2.1.1"
    const val rxJava = "2.x.x"
    const val retrofit ="2.6.0"
    const val retrofitConverterGson ="2.6.0"
    const val retrofitAdapter ="2.4.0"
    const val coroutinesCore ="1.0.1"
    const val coroutinesAndroid ="1.0.1"
    const val coroutinesTest = "1.4.3"
    const val loggingInterceptor = "4.0.1"
    const val mockito = "2.+"
    const val coreTesting = "2.1.0"
    const val truth = "1.0.1"
    const val shimmer = "0.4.0"
}
object Dep {
    const val kotlinStandardLibrary = "org.jetbrains.kotlin:kotlin-stdlib:${Versions.kotlin}"
    const val arrowCore = "io.arrow-kt:arrow-core:${Versions.arrowCore}"
    const val androidxCore ="androidx.core:core-ktx:${Versions.androidxCore}"
    const val appcompat ="androidx.appcompat:appcompat:${Versions.appCompat}"
    const val constraintLayout ="androidx.constraintlayout:constraintlayout:${Versions.constraintLayout}"
    const val legacySupport ="androidx.legacy:legacy-support-v4:${Versions.legacySupport}"
    const val testCore = "androidx.test:core:${Versions.testCore}"
    const val junit ="junit:junit:${Versions.junit}"
    const val junitExt ="androidx.test.ext:junit:${Versions.junitExt}"
    const val espresso ="androidx.test.espresso:espresso-core:${Versions.espresso}"
    const val material ="com.google.android.material:material:${Versions.material}"
    const val recyclerView ="androidx.recyclerview:recyclerview:${Versions.recyclerView}"
    const val navigationFragment ="androidx.navigation:navigation-fragment-ktx:${Versions.navigationFragment}"
    const val navigationUI ="androidx.navigation:navigation-ui-ktx:${Versions.navigationUI}"
    const val glide ="com.github.bumptech.glide:glide:${Versions.glide}"
    const val roomRuntime ="androidx.room:room-runtime:${Versions.roomRuntime}"
    const val roomKtx ="androidx.room:room-ktx:${Versions.roomKtx}"
    const val roomCompiler ="androidx.room:room-compiler:${Versions.roomCompiler}"
    const val koin ="org.koin:koin-android:${Versions.koin}"
    const val koinViewModel ="org.koin:koin-androidx-viewmodel:${Versions.koinViewModel}"
    const val koinScope ="org.koin:koin-androidx-scope:${Versions.koinScope}"
    const val rxAndroid ="io.reactivex.rxjava2:rxandroid:${Versions.rxAndroid}"
    const val rxJava="io.reactivex.rxjava2:rxjava:${Versions.rxJava}"
    const val retrofit ="com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    const val retrofitConverterGson ="com.squareup.retrofit2:converter-gson:${Versions.retrofitConverterGson}"
    const val retrofitAdapter ="com.squareup.retrofit2:adapter-rxjava2:${Versions.retrofitAdapter}"
    const val coroutinesCore ="org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.coroutinesCore}"
    const val coroutinesAndroid ="org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.coroutinesAndroid}"
    const val coroutinesTest ="org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.coroutinesTest}"
    const val loggingInterceptor ="com.squareup.okhttp3:logging-interceptor:${Versions.loggingInterceptor}"
    const val mockito ="org.mockito:mockito-core:${Versions.mockito}"
    const val coreTesting = "androidx.arch.core:core-testing:${Versions.coreTesting}"
    const val truth = "com.google.truth:truth:${Versions.truth}"
    const val shimmer = "com.facebook.shimmer:shimmer:${Versions.shimmer}"
}

